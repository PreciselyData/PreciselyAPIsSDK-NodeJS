/**
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 11.9.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FieldsMatching } from './fieldsMatching';
import { ReturnFieldsDescriptor } from './returnFieldsDescriptor';

export class GeocodePreferences {
    'returnAllCandidateInfo': boolean;
    'fallbackToGeographic': string;
    'fallbackToPostal': string;
    'maxReturnedCandidates': string;
    'distance': string;
    'streetOffset': string;
    'cornerOffset': string;
    'matchMode'?: string;
    'clientLocale'?: string;
    'clientCoordSysName'?: string;
    'distanceUnits'?: string;
    'streetOffsetUnits'?: string;
    'cornerOffsetUnits'?: string;
    'mustMatchFields'?: FieldsMatching;
    'returnFieldsDescriptor'?: ReturnFieldsDescriptor;
    'outputRecordType'?: string;
    'customPreferences'?: { [key: string]: object; };
    'preferredDictionaryOrders'?: Array<string>;
    'outputCasing'?: string;
    'latLongOffset'?: string;
    'squeeze'?: string;
    'returnLatLongFields'?: string;
    'useGeoTaxAuxiliaryFile'?: string;
    'latLongFormat'?: string;
    'defaultBufferWidth'?: string;
    'returnCensusFields'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "returnAllCandidateInfo",
            "baseName": "returnAllCandidateInfo",
            "type": "boolean"
        },
        {
            "name": "fallbackToGeographic",
            "baseName": "fallbackToGeographic",
            "type": "string"
        },
        {
            "name": "fallbackToPostal",
            "baseName": "fallbackToPostal",
            "type": "string"
        },
        {
            "name": "maxReturnedCandidates",
            "baseName": "maxReturnedCandidates",
            "type": "string"
        },
        {
            "name": "distance",
            "baseName": "distance",
            "type": "string"
        },
        {
            "name": "streetOffset",
            "baseName": "streetOffset",
            "type": "string"
        },
        {
            "name": "cornerOffset",
            "baseName": "cornerOffset",
            "type": "string"
        },
        {
            "name": "matchMode",
            "baseName": "matchMode",
            "type": "string"
        },
        {
            "name": "clientLocale",
            "baseName": "clientLocale",
            "type": "string"
        },
        {
            "name": "clientCoordSysName",
            "baseName": "clientCoordSysName",
            "type": "string"
        },
        {
            "name": "distanceUnits",
            "baseName": "distanceUnits",
            "type": "string"
        },
        {
            "name": "streetOffsetUnits",
            "baseName": "streetOffsetUnits",
            "type": "string"
        },
        {
            "name": "cornerOffsetUnits",
            "baseName": "cornerOffsetUnits",
            "type": "string"
        },
        {
            "name": "mustMatchFields",
            "baseName": "mustMatchFields",
            "type": "FieldsMatching"
        },
        {
            "name": "returnFieldsDescriptor",
            "baseName": "returnFieldsDescriptor",
            "type": "ReturnFieldsDescriptor"
        },
        {
            "name": "outputRecordType",
            "baseName": "outputRecordType",
            "type": "string"
        },
        {
            "name": "customPreferences",
            "baseName": "customPreferences",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "preferredDictionaryOrders",
            "baseName": "preferredDictionaryOrders",
            "type": "Array<string>"
        },
        {
            "name": "outputCasing",
            "baseName": "outputCasing",
            "type": "string"
        },
        {
            "name": "latLongOffset",
            "baseName": "latLongOffset",
            "type": "string"
        },
        {
            "name": "squeeze",
            "baseName": "squeeze",
            "type": "string"
        },
        {
            "name": "returnLatLongFields",
            "baseName": "returnLatLongFields",
            "type": "string"
        },
        {
            "name": "useGeoTaxAuxiliaryFile",
            "baseName": "useGeoTaxAuxiliaryFile",
            "type": "string"
        },
        {
            "name": "latLongFormat",
            "baseName": "latLongFormat",
            "type": "string"
        },
        {
            "name": "defaultBufferWidth",
            "baseName": "defaultBufferWidth",
            "type": "string"
        },
        {
            "name": "returnCensusFields",
            "baseName": "returnCensusFields",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GeocodePreferences.attributeTypeMap;
    }
}

