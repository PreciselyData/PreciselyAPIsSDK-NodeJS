/**
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 11.9.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AbsenteeOwner } from './absenteeOwner';
import { BasementType } from './basementType';
import { BuildgCondition } from './buildgCondition';
import { BuildgFeaturesSqft } from './buildgFeaturesSqft';
import { BuildgStyle } from './buildgStyle';
import { BuildgType } from './buildgType';
import { BuildingSqftSource } from './buildingSqftSource';
import { CaExemptions } from './caExemptions';
import { Construction } from './construction';
import { CoolingType } from './coolingType';
import { ExteriorWalls } from './exteriorWalls';
import { Foundation } from './foundation';
import { GarageType } from './garageType';
import { HeatingType } from './heatingType';
import { LandUse } from './landUse';
import { Owners } from './owners';
import { PropertyGeometry } from './propertyGeometry';
import { RoofCoverType } from './roofCoverType';
import { RoofFrameType } from './roofFrameType';
import { RoofShapeType } from './roofShapeType';
import { Stories } from './stories';
import { TaxExemption } from './taxExemption';
import { Vacancy } from './vacancy';

export class PropertyAttributes {
    'pbKey'?: string;
    'propApn'?: string;
    'propType'?: string;
    'propSqFt'?: string;
    'buildgSqFt'?: string;
    'buildgSqFtSource'?: BuildingSqftSource;
    'landUse'?: LandUse;
    'construction'?: Construction;
    'roofCoverType'?: RoofCoverType;
    'subdivision'?: string;
    'geometry'?: PropertyGeometry;
    'builtYear'?: string;
    'bedrooms'?: string;
    'baths'?: string;
    'pool'?: string;
    'fireplace'?: string;
    'mobileHome'?: string;
    'heatingType'?: HeatingType;
    'coolingType'?: CoolingType;
    'assessedValue'?: string;
    'marketValue'?: string;
    'appraisedValue'?: string;
    'taxAmount'?: string;
    'taxExemptions'?: Array<TaxExemption>;
    'caExemptions'?: CaExemptions;
    'salesDate'?: string;
    'priorSaleDate'?: string;
    'priorSalesPrice'?: string;
    'stories'?: Stories;
    'livingSqFt'?: string;
    'roofFrameType'?: RoofFrameType;
    'foundation'?: Foundation;
    'buildgCondition'?: BuildgCondition;
    'buildgCount'?: string;
    'buildgUnitNo'?: string;
    'buildgFeaturesSqFt'?: Array<BuildgFeaturesSqft>;
    'businessName'?: string;
    'taxAddress'?: string;
    'vacancy'?: Vacancy;
    'owners'?: Array<Owners>;
    'appraisedValueImp'?: string;
    'assessedValueImp'?: string;
    'buildgType'?: BuildgType;
    'basementType'?: BasementType;
    'effectiveBuiltYear'?: string;
    'exteriorWalls'?: ExteriorWalls;
    'garageType'?: GarageType;
    'lastUpdated'?: string;
    'marketValueImp'?: string;
    'absenteeOwner'?: AbsenteeOwner;
    'parkingSqFt'?: string;
    'replacementCost'?: string;
    'roofShapeType'?: RoofShapeType;
    'buildgStyle'?: BuildgStyle;
    'basementSqFt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "pbKey",
            "baseName": "pbKey",
            "type": "string"
        },
        {
            "name": "propApn",
            "baseName": "propApn",
            "type": "string"
        },
        {
            "name": "propType",
            "baseName": "propType",
            "type": "string"
        },
        {
            "name": "propSqFt",
            "baseName": "propSqFt",
            "type": "string"
        },
        {
            "name": "buildgSqFt",
            "baseName": "buildgSqFt",
            "type": "string"
        },
        {
            "name": "buildgSqFtSource",
            "baseName": "buildgSqFtSource",
            "type": "BuildingSqftSource"
        },
        {
            "name": "landUse",
            "baseName": "landUse",
            "type": "LandUse"
        },
        {
            "name": "construction",
            "baseName": "construction",
            "type": "Construction"
        },
        {
            "name": "roofCoverType",
            "baseName": "roofCoverType",
            "type": "RoofCoverType"
        },
        {
            "name": "subdivision",
            "baseName": "subdivision",
            "type": "string"
        },
        {
            "name": "geometry",
            "baseName": "geometry",
            "type": "PropertyGeometry"
        },
        {
            "name": "builtYear",
            "baseName": "builtYear",
            "type": "string"
        },
        {
            "name": "bedrooms",
            "baseName": "bedrooms",
            "type": "string"
        },
        {
            "name": "baths",
            "baseName": "baths",
            "type": "string"
        },
        {
            "name": "pool",
            "baseName": "pool",
            "type": "string"
        },
        {
            "name": "fireplace",
            "baseName": "fireplace",
            "type": "string"
        },
        {
            "name": "mobileHome",
            "baseName": "mobileHome",
            "type": "string"
        },
        {
            "name": "heatingType",
            "baseName": "heatingType",
            "type": "HeatingType"
        },
        {
            "name": "coolingType",
            "baseName": "coolingType",
            "type": "CoolingType"
        },
        {
            "name": "assessedValue",
            "baseName": "assessedValue",
            "type": "string"
        },
        {
            "name": "marketValue",
            "baseName": "marketValue",
            "type": "string"
        },
        {
            "name": "appraisedValue",
            "baseName": "appraisedValue",
            "type": "string"
        },
        {
            "name": "taxAmount",
            "baseName": "taxAmount",
            "type": "string"
        },
        {
            "name": "taxExemptions",
            "baseName": "taxExemptions",
            "type": "Array<TaxExemption>"
        },
        {
            "name": "caExemptions",
            "baseName": "caExemptions",
            "type": "CaExemptions"
        },
        {
            "name": "salesDate",
            "baseName": "salesDate",
            "type": "string"
        },
        {
            "name": "priorSaleDate",
            "baseName": "priorSaleDate",
            "type": "string"
        },
        {
            "name": "priorSalesPrice",
            "baseName": "priorSalesPrice",
            "type": "string"
        },
        {
            "name": "stories",
            "baseName": "stories",
            "type": "Stories"
        },
        {
            "name": "livingSqFt",
            "baseName": "livingSqFt",
            "type": "string"
        },
        {
            "name": "roofFrameType",
            "baseName": "roofFrameType",
            "type": "RoofFrameType"
        },
        {
            "name": "foundation",
            "baseName": "foundation",
            "type": "Foundation"
        },
        {
            "name": "buildgCondition",
            "baseName": "buildgCondition",
            "type": "BuildgCondition"
        },
        {
            "name": "buildgCount",
            "baseName": "buildgCount",
            "type": "string"
        },
        {
            "name": "buildgUnitNo",
            "baseName": "buildgUnitNo",
            "type": "string"
        },
        {
            "name": "buildgFeaturesSqFt",
            "baseName": "buildgFeaturesSqFt",
            "type": "Array<BuildgFeaturesSqft>"
        },
        {
            "name": "businessName",
            "baseName": "businessName",
            "type": "string"
        },
        {
            "name": "taxAddress",
            "baseName": "taxAddress",
            "type": "string"
        },
        {
            "name": "vacancy",
            "baseName": "vacancy",
            "type": "Vacancy"
        },
        {
            "name": "owners",
            "baseName": "owners",
            "type": "Array<Owners>"
        },
        {
            "name": "appraisedValueImp",
            "baseName": "appraisedValueImp",
            "type": "string"
        },
        {
            "name": "assessedValueImp",
            "baseName": "assessedValueImp",
            "type": "string"
        },
        {
            "name": "buildgType",
            "baseName": "buildgType",
            "type": "BuildgType"
        },
        {
            "name": "basementType",
            "baseName": "basementType",
            "type": "BasementType"
        },
        {
            "name": "effectiveBuiltYear",
            "baseName": "effectiveBuiltYear",
            "type": "string"
        },
        {
            "name": "exteriorWalls",
            "baseName": "exteriorWalls",
            "type": "ExteriorWalls"
        },
        {
            "name": "garageType",
            "baseName": "garageType",
            "type": "GarageType"
        },
        {
            "name": "lastUpdated",
            "baseName": "lastUpdated",
            "type": "string"
        },
        {
            "name": "marketValueImp",
            "baseName": "marketValueImp",
            "type": "string"
        },
        {
            "name": "absenteeOwner",
            "baseName": "absenteeOwner",
            "type": "AbsenteeOwner"
        },
        {
            "name": "parkingSqFt",
            "baseName": "parkingSqFt",
            "type": "string"
        },
        {
            "name": "replacementCost",
            "baseName": "replacementCost",
            "type": "string"
        },
        {
            "name": "roofShapeType",
            "baseName": "roofShapeType",
            "type": "RoofShapeType"
        },
        {
            "name": "buildgStyle",
            "baseName": "buildgStyle",
            "type": "BuildgStyle"
        },
        {
            "name": "basementSqFt",
            "baseName": "basementSqFt",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PropertyAttributes.attributeTypeMap;
    }
}

